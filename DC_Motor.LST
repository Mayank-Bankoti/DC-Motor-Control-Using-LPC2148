ARM COMPILER V2.40a,  DC_Motor                                                             29/08/23  05:09:47  PAGE 1   


ARM COMPILER V2.40a, COMPILATION OF MODULE DC_Motor
OBJECT MODULE PLACED IN DC_Motor.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe DC_Motor.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include <lpc214x.h>
    2          
    3          #define MOTOR_EN_PIN    (1 << 1)    // P0.1 - Enable 1 pin for L293D
    4          #define MOTOR_A_PIN     (1 << 4)    // P0.4 - IN1
    5          #define MOTOR_B_PIN     (1 << 5)    // P0.5 - IN2
    6          #define SWITCH_PIN      (1 << 3)    // P0.3 - Switch button
    7          
    8          
    9          
   10          
   11          void initGPIO() {
   12   1        
   13   1          IODIR0 |= (MOTOR_A_PIN | MOTOR_B_PIN | MOTOR_EN_PIN);
   14   1          IOCLR0 = (MOTOR_A_PIN | MOTOR_B_PIN | MOTOR_EN_PIN);
   15   1          IODIR0 &= ~(SWITCH_PIN);
   16   1      }
   17          
   18          
   19          int main() {
   20   1      
   21   1          initGPIO();
   22   1      
   23   1          while (1) {
   24   2      
   25   2              if((IOPIN0 & SWITCH_PIN))
   26   2              {
   27   3              IOSET0 = MOTOR_A_PIN;
   28   3              IOCLR0 = MOTOR_B_PIN;
   29   3              }
   30   2              else
   31   2              {
   32   3                IOCLR0 = MOTOR_A_PIN;
   33   3              IOSET0 = MOTOR_B_PIN;
   34   3              }
   35   2      
   36   2          }
   37   1      
   38   1          return 0;
   39   1      }
ARM COMPILER V2.40a,  DC_Motor                                                             29/08/23  05:09:47  PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         initGPIO?T
 PUBLIC         main



*** CODE SEGMENT '?PR?initGPIO?T?DC_Motor':
   13:     IODIR0 |= (MOTOR_A_PIN | MOTOR_B_PIN | MOTOR_EN_PIN);
 00000000  2232      MOV         R2,#0x32
 00000002  4800      LDR         R0,=0xE0028008
 00000004  6801      LDR         R1,[R0,#0x0]
 00000006  4311      ORR         R1,R2
 00000008  6001      STR         R1,[R0,#0x0]
   14:     IOCLR0 = (MOTOR_A_PIN | MOTOR_B_PIN | MOTOR_EN_PIN);
 0000000A  2132      MOV         R1,#0x32
 0000000C  4800      LDR         R0,=0xE002800C
 0000000E  6001      STR         R1,[R0,#0x0]
   15:     IODIR0 &= ~(SWITCH_PIN);
 00000010  2208      MOV         R2,#0x8
 00000012  4800      LDR         R0,=0xE0028008
 00000014  6801      LDR         R1,[R0,#0x0]
 00000016  4391      BIC         R1,R2
 00000018  6001      STR         R1,[R0,#0x0]
   16: }
 0000001A  4770      BX          R14
 0000001C          ENDP ; 'initGPIO?T'


*** CODE SEGMENT '?PR?main?DC_Motor':
   19: int main() {
 00000000  B500      PUSH        {LR}
   21:     initGPIO();
 00000002  F7FF      BL          initGPIO?T  ; T=0x0001  (1)
 00000004  FFFD      BL          initGPIO?T  ; T=0x0001  (2)
   23:     while (1) {
 00000006          L_3:
   25:         if((IOPIN0 & SWITCH_PIN))
 00000006  4800      LDR         R0,=0xE0028000
 00000008  6800      LDR         R0,[R0,#0x0]
 0000000A  2108      MOV         R1,#0x8
 0000000C  4208      TST         R0,R1
 0000000E  D006      BEQ         L_5  ; T=0x0000001E
   27:         IOSET0 = MOTOR_A_PIN;
 00000010  2110      MOV         R1,#0x10
 00000012  4800      LDR         R0,=0xE0028004
 00000014  6001      STR         R1,[R0,#0x0]
   28:         IOCLR0 = MOTOR_B_PIN;
 00000016  2120      MOV         R1,#0x20
 00000018  4800      LDR         R0,=0xE002800C
 0000001A  6001      STR         R1,[R0,#0x0]
   29:         }
 0000001C  E7F3      B           L_3  ; T=0x00000006
 0000001E          L_5:
   32:           IOCLR0 = MOTOR_A_PIN;
 0000001E  2110      MOV         R1,#0x10
 00000020  4800      LDR         R0,=0xE002800C
 00000022  6001      STR         R1,[R0,#0x0]
   33:         IOSET0 = MOTOR_B_PIN;
 00000024  2120      MOV         R1,#0x20
 00000026  4800      LDR         R0,=0xE0028004
 00000028  6001      STR         R1,[R0,#0x0]
   36:     }
 0000002A  E7EC      B           L_3  ; T=0x00000006
   39: }
ARM COMPILER V2.40a,  DC_Motor                                                             29/08/23  05:09:47  PAGE 3   

 0000002C  BC08      POP         {R3}
 0000002E  4718      BX          R3
 00000030          ENDP ; 'main'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =    ------
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
